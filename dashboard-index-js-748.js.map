{"version":3,"sources":["webpack://project-structure/./src/components/notification/index.js","webpack://project-structure/./src/components/range-picker/index.js","webpack://project-structure/./src/components/sortable-table/index.js","webpack://project-structure/./src/components/column-chart/index.js","webpack://project-structure/./src/pages/dashboard/bestsellers-header.js","webpack://project-structure/./src/pages/dashboard/index.js","webpack://project-structure/./src/utils/fetch-json.js"],"names":["NotificationMessage","constructor","message","duration","type","this","render","isAlreadyShow","remove","getTemplate","element","document","createElement","innerHTML","firstElementChild","classList","add","show","body","append","setTimeout","destroy","RangePicker","date","toLocaleString","dateStyle","from","Date","to","event","isOpen","contains","isRangePicker","target","close","showDateFrom","selected","formatDate","template","subElements","getSubElements","initEventListeners","Promise","resolve","subElement","querySelectorAll","dataset","elem","input","selector","addEventListener","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","selectedFromElem","closest","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","removeEventListener","SortableTable","headerConfig","data","sorted","id","find","item","sortable","order","isSortLocally","url","clickableString","endOfData","getBoundingClientRect","bottom","documentElement","clientHeight","loadData","then","update","catch","error","sort","r","URL","process","renderHeaders","sortColumn","headerArr","obj","arrowTemplate","orderType","push","title","join","renderBody","bodyArr","filter","map","el","arr","getTable","searchParams","set","length","pageSize","fetchJson","replace","rows","childNodes","header","handleClick","onWindowScroll","sortOnClient","direction","asc","desc","sortType","a","b","localeCompare","sortOnServer","ColumnChart","label","link","formatHeading","range","linkTemplate","chartHeight","getColumnBody","maxValue","Math","max","Object","values","entries","scale","percent","toFixed","floor","headerTotal","reduce","textContent","category","Page","components","sortableTable","ordersChart","salesChart","customersChart","initComponents","now","rangePicker","style","currency","slice","renderComponents","component","keys","updateComponents","async","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","status","Error","super","window","reason","alert"],"mappings":"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","file":"dashboard-index-js-748.js","sourcesContent":["export default class NotificationMessage {\r\n  element;\r\n  constructor(message = '', {\r\n    duration = 1000,\r\n    type = 'success',\r\n  } = {}) {\r\n    this.duration = duration;\r\n    this.message = message;\r\n    this.type = type;\r\n    this.render();\r\n    if (NotificationMessage.isAlreadyShow) {\r\n      NotificationMessage.isAlreadyShow.remove(NotificationMessage.isAlreadyShow);\r\n    } else {\r\n      NotificationMessage.isAlreadyShow = false;\r\n    }\r\n  }\r\n  getTemplate () {\r\n    return `<div class=\"notification\" style=\"--value:2s\">\r\n    <div class=\"timer\"></div>\r\n    <div class=\"inner-wrapper\">\r\n      <div class=\"notification-header\">${this.type}</div>\r\n      <div class=\"notification-body\">${this.message}</div>\r\n    </div>\r\n  </div>`;\r\n  }\r\n  render() {\r\n    const element = document.createElement('div'); // (*)\r\n    element.innerHTML = this.getTemplate();\r\n    this.element = element.firstElementChild;\r\n    this.element.classList.add(this.type);\r\n  }\r\n  show(element = document.body) {\r\n    element.append(this.element);\r\n    NotificationMessage.isAlreadyShow = this.element;\r\n    const timer = setTimeout(() => this.remove(), this.duration);\r\n    return this.element;\r\n  }\r\n  remove() {\r\n    this.element.remove();\r\n  }\r\n  destroy() {\r\n    this.remove();\r\n  }\r\n}\r\n","export default class RangePicker {\r\n  element = null;\r\n  subElements = {};\r\n  selectingFrom = true;\r\n  selected = {\r\n    from: new Date(),\r\n    to: new Date()\r\n  };\r\n\r\n  static formatDate (date) {\r\n    return date.toLocaleString('ru', {dateStyle: 'short'})\r\n  }\r\n\r\n  onDocumentClick = event => {\r\n    const isOpen = this.element.classList.contains('rangepicker_open');\r\n    const isRangePicker = this.element.contains(event.target);\r\n\r\n    if (isOpen && !isRangePicker) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  constructor({from = new Date(), to = new Date()} = {}) {\r\n    this.showDateFrom = new Date(from);\r\n    this.selected = {from, to};\r\n\r\n    this.render();\r\n  }\r\n\r\n  get template () {\r\n    const from = RangePicker.formatDate(this.selected.from);\r\n    const to = RangePicker.formatDate(this.selected.to);\r\n\r\n    return `<div class=\"rangepicker\">\r\n      <div class=\"rangepicker__input\" data-elem=\"input\">\r\n        <span data-elem=\"from\">${from}</span> -\r\n        <span data-elem=\"to\">${to}</span>\r\n      </div>\r\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    this.initEventListeners();\r\n\r\n    return Promise.resolve(this.element);\r\n  }\r\n\r\n  getSubElements (element) {\r\n    const subElements = {};\r\n\r\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\r\n      subElements[subElement.dataset.elem] = subElement;\r\n    }\r\n\r\n    return subElements;\r\n  }\r\n\r\n  initEventListeners () {\r\n    const {input, selector} = this.subElements;\r\n\r\n    document.addEventListener('click', this.onDocumentClick, true);\r\n    input.addEventListener('click', () => this.toggle());\r\n    selector.addEventListener('click', event => this.onSelectorClick(event));\r\n  }\r\n\r\n  toggle() {\r\n    this.element.classList.toggle('rangepicker_open');\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  onSelectorClick({target}) {\r\n    if (target.classList.contains('rangepicker__cell')) {\r\n      this.onRangePickerCellClick(target);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.element.classList.remove('rangepicker_open');\r\n  }\r\n\r\n  renderDateRangePicker() {\r\n    const showDate1 = new Date(this.showDateFrom);\r\n    const showDate2 = new Date(this.showDateFrom);\r\n    const { selector } = this.subElements;\r\n\r\n    showDate2.setMonth(showDate2.getMonth() + 1);\r\n\r\n    selector.innerHTML = `\r\n      <div class=\"rangepicker__selector-arrow\"></div>\r\n      <div class=\"rangepicker__selector-control-left\"></div>\r\n      <div class=\"rangepicker__selector-control-right\"></div>\r\n      ${this.renderCalendar(showDate1)}\r\n      ${this.renderCalendar(showDate2)}\r\n    `;\r\n\r\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\r\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\r\n\r\n    controlLeft.addEventListener('click', () => this.prev());\r\n    controlRight.addEventListener('click', () => this.next());\r\n\r\n    this.renderHighlight();\r\n  }\r\n\r\n  prev () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  next () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  renderHighlight() {\r\n    const { from, to } = this.selected;\r\n\r\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\r\n      const { value } = cell.dataset;\r\n      const cellDate = new Date(value);\r\n\r\n      cell.classList.remove('rangepicker__selected-from');\r\n      cell.classList.remove('rangepicker__selected-between');\r\n      cell.classList.remove('rangepicker__selected-to');\r\n\r\n      if (from && value === from.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-from');\r\n      } else if (to && value === to.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-to');\r\n      } else if (from && to && cellDate >= from && cellDate <= to) {\r\n        cell.classList.add('rangepicker__selected-between');\r\n      }\r\n    }\r\n\r\n    if (from) {\r\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\r\n      if (selectedFromElem) {\r\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\r\n      }\r\n    }\r\n\r\n    if (to) {\r\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\r\n      if (selectedToElem) {\r\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\r\n      }\r\n    }\r\n  }\r\n\r\n  renderCalendar(showDate) {\r\n    const date = new Date(showDate);\r\n    const getGridStartIndex = dayIndex => {\r\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\r\n      return index + 1;\r\n    };\r\n\r\n    date.setDate(1);\r\n\r\n    // text-transform: capitalize\r\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\r\n\r\n    let table = `<div class=\"rangepicker__calendar\">\r\n      <div class=\"rangepicker__month-indicator\">\r\n        <time datetime=${monthStr}>${monthStr}</time>\r\n      </div>\r\n      <div class=\"rangepicker__day-of-week\">\r\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\r\n      </div>\r\n      <div class=\"rangepicker__date-grid\">\r\n    `;\r\n\r\n    // first day of month starts after a space\r\n    // * * * 1 2 3 4\r\n    table += `\r\n      <button type=\"button\"\r\n        class=\"rangepicker__cell\"\r\n        data-value=\"${date.toISOString()}\"\r\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\r\n          ${date.getDate()}\r\n      </button>`;\r\n\r\n    date.setDate(2);\r\n\r\n    while (date.getMonth() === showDate.getMonth()) {\r\n      table += `\r\n        <button type=\"button\"\r\n          class=\"rangepicker__cell\"\r\n          data-value=\"${date.toISOString()}\">\r\n            ${date.getDate()}\r\n        </button>`;\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    // close the table\r\n    table += '</div></div>';\r\n\r\n    return table;\r\n  }\r\n\r\n  onRangePickerCellClick(target) {\r\n    const { value } = target.dataset;\r\n\r\n    if (value) {\r\n      const dateValue = new Date(value);\r\n\r\n      if (this.selectingFrom) {\r\n        this.selected = {\r\n          from: dateValue,\r\n          to:   null\r\n        };\r\n        this.selectingFrom = false;\r\n        this.renderHighlight();\r\n      } else {\r\n        if (dateValue > this.selected.from) {\r\n          this.selected.to = dateValue;\r\n        } else {\r\n          this.selected.to = this.selected.from;\r\n          this.selected.from = dateValue;\r\n        }\r\n\r\n        this.selectingFrom = true;\r\n        this.renderHighlight();\r\n      }\r\n\r\n      if (this.selected.from && this.selected.to) {\r\n        this.dispatchEvent();\r\n        this.close();\r\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\r\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent () {\r\n    this.element.dispatchEvent(new CustomEvent('date-select', {\r\n      bubbles: true,\r\n      detail:  this.selected\r\n    }));\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n    // TODO: Warning! To remove listener  MUST be passes the same event phase\r\n    document.removeEventListener('click', this.onDocumentClick, true);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.element = null;\r\n    this.subElements = {};\r\n    this.selectingFrom = true;\r\n    this.selected = {\r\n      from: new Date(),\r\n      to: new Date()\r\n    };\r\n\r\n    return this;\r\n  }\r\n}\r\n","import fetchJson from \"../../utils/fetch-json.js\";\r\nimport NotificationMessage from '../notification';\r\n\r\nconst BACKEND_URL = process.env.BACKEND_URL;\r\n\r\nexport default class SortableTable {\r\n  subElements = {};\r\n  pageSize = 30;\r\n  onWindowScroll = () => {\r\n    if (this.element.classList.contains(\"sortable-table_loading\") || this.endOfData || this.isSortLocally)\r\n      return;\r\n    if (this.element.getBoundingClientRect().bottom < document.documentElement.clientHeight) {\r\n\r\n      this.loadData(this.sorted.id, this.sorted.order)\r\n        .then((data) => {\r\n          const replace = false;\r\n          this.update(data, replace);\r\n          this.element.classList.remove(\"sortable-table_loading\");\r\n        })\r\n        .catch(error => {\r\n          const notification = new NotificationMessage('Ошибка получения данных', {\r\n            duration: 2000,\r\n            type: 'error'\r\n          });\r\n        });\r\n\r\n    }\r\n  };\r\n  handleClick = (event) => {\r\n    const element = event.target.closest('[data-sortable=\"true\"]');\r\n    if (!element) return;\r\n    let order ;\r\n    switch (element.dataset.order) {\r\n    case 'asc':\r\n      order = 'desc';\r\n      break;\r\n    case 'desc':\r\n      order = 'asc';\r\n      break;\r\n    default:\r\n      order = 'asc';\r\n    }\r\n    this.sort(element.dataset.id, order).then(r => r);\r\n  };\r\n  constructor(headerConfig = [], {\r\n    data = [],\r\n    sorted = {\r\n      id: headerConfig.find(item => item.sortable).id,\r\n      order: 'asc'\r\n    },\r\n    isSortLocally = false,\r\n    url = '',\r\n    clickableString = true\r\n  } = {}) {\r\n    this.headerConfig = headerConfig;\r\n    this.url = typeof url === 'string'? new URL(url, BACKEND_URL): url;\r\n    this.data = data;\r\n    this.sorted = sorted;\r\n    this.isSortLocally = isSortLocally;\r\n    this.clickableString = clickableString;\r\n    this.render().then(() => this.initEventListeners());\r\n  }\r\n  getTemplate () {\r\n    return `<div data-element=\"productsContainer\" class=\"products-list__container\">\r\n  <div class=\"sortable-table\">\r\n  <div data-element=\"header\" class=\"sortable-table__header sortable-table__row\"></div>\r\n  <div data-element=\"body\" class=\"sortable-table__body\"></div>\r\n  <\\div><\\div>`;\r\n  }\r\n  renderHeaders (sortColumn, order) {\r\n    const headerArr = [];\r\n    for (const obj of this.headerConfig) {\r\n      let arrowTemplate = '';\r\n      let orderType = '';\r\n      if (obj.id === sortColumn) {\r\n        arrowTemplate = `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\r\n        <span class=\"sort-arrow\"></span>\r\n        </span>`;\r\n        orderType = order;\r\n      }\r\n      headerArr.push(`<div class=\"sortable-table__cell\" data-id=\"${obj.id}\" data-sortable=\"${obj.sortable}\" data-order=\"${orderType}\">\r\n      <span>${obj.title}</span>${arrowTemplate}\r\n      </div>`);\r\n    }\r\n    return headerArr.join('');\r\n  }\r\n\r\n  renderBody (data) {\r\n    const bodyArr = [];\r\n    for (const obj of data) {\r\n      bodyArr.push(`${this.clickableString ? `<a href=\"/products/${obj.id}\" `:'<div '} class=\"sortable-table__row\">\r\n        ${this.headerConfig\r\n        .filter(item => obj[item.id])\r\n        .map(el => el.template ? el.template(obj[el.id]) : `<div class=\"sortable-table__cell\">${obj[el.id]}</div>`)\r\n        .join('')}\r\n        ${this.clickableString ? '</a>':'</div>'}`);\r\n    }\r\n    return bodyArr.join('');\r\n  }\r\n  getSubElements(element) {\r\n    const arr = element.querySelectorAll('[data-element]');\r\n    for (const elem of arr) {\r\n      this.subElements[elem.dataset.element] = elem;\r\n    }\r\n  }\r\n  async render() {\r\n    const {id, order} = this.sorted;\r\n    const element = document.createElement('div'); // (*)\r\n    element.innerHTML = this.getTemplate();\r\n    this.element = element.firstElementChild;\r\n    this.getSubElements(this.element);\r\n    this.data = await this.loadData(id, order);\r\n    this.getTable(id, order);\r\n  }\r\n\r\n  async loadData(id, order) {\r\n    this.url.searchParams.set('_sort', id);\r\n    this.url.searchParams.set('_order', order);\r\n    this.url.searchParams.set(\"_start\", this.data.length);\r\n    this.url.searchParams.set(\"_end\", this.data.length + this.pageSize);\r\n    this.element.classList.add(\"sortable-table_loading\");\r\n    const data = await fetchJson(this.url);\r\n    this.endOfData = !data.length;\r\n    this.element.classList.remove(\"sortable-table_loading\");\r\n    return data;\r\n  }\r\n  update(data, replace = true) {\r\n    const rows = document.createElement('div');\r\n\r\n    this.data = [...this.data, ...data];\r\n    rows.innerHTML = this.renderBody(data);\r\n\r\n    if (replace) this.subElements.body.innerHTML = '';\r\n    this.subElements.body.append(...rows.childNodes);\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.subElements.header.addEventListener('pointerdown', this.handleClick);\r\n    document.addEventListener(\"scroll\", this.onWindowScroll);\r\n  }\r\n  sortOnClient(id, order) {\r\n    const directions = {\r\n      asc: -1,\r\n      desc: 1\r\n    };\r\n    const direction = directions[order];\r\n    const sortType = this.headerConfig.find(item => item.id === id).sortType;\r\n    this.data.sort((a, b) => {\r\n      switch (sortType) {\r\n      case 'number':\r\n        return direction * (a[id] - b[id]);\r\n      case 'string':\r\n        return direction * a[id].localeCompare(b[id], ['ru', 'en']);\r\n      default:\r\n        return direction * (a[id] - b[id]);\r\n      }\r\n\r\n    });\r\n    this.getTable(id, order);\r\n  }\r\n\r\n  async sortOnServer(id, order) {\r\n    this.data = await this.loadData(id, order);\r\n    this.getTable(id, order);\r\n  }\r\n\r\n  async sort(id, order) {\r\n    !this.isSortLocally ? await this.sortOnServer(id, order) : this.sortOnClient(id, order);\r\n  }\r\n  getTable (id, order) {\r\n    this.subElements.header.innerHTML = this.renderHeaders(id, order);\r\n    this.subElements.body.innerHTML = this.renderBody(this.data);\r\n    this.element.classList.remove(\"sortable-table_loading\");\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    document.removeEventListener(\"scroll\", this.onWindowScroll);\r\n    this.subElements.header.removeEventListener('pointerdown', this.handleClick);\r\n  }\r\n\r\n}\r\n","import fetchJson from '../../utils/fetch-json.js';\r\n\r\nconst BACKEND_URL = process.env.BACKEND_URL;\r\n\r\nexport default class ColumnChart {\r\n  chartHeight = 50;\r\n  subElements = {};\r\n  constructor({\r\n    label = '',\r\n    link = '',\r\n    formatHeading = data => data,\r\n    url = '',\r\n    range = {\r\n      from: new Date(),\r\n      to: new Date(),\r\n    }\r\n  } = {}) {\r\n    this.url = new URL(url, BACKEND_URL);\r\n    this.range = range;\r\n    this.label = label;\r\n    this.linkTemplate = link ? `<a href=\"${link}\" class=\"column-chart__link\">View all</a>` : '';\r\n    this.formatHeading = formatHeading;\r\n    this.render();\r\n    this.update(this.range.from, this.range.to);\r\n  }\r\n\r\n  getTemplate () {\r\n    return `<div class=\"column-chart column-chart_loading\" style=\"--chart-height: ${this.chartHeight}\">\r\n      <div class=\"column-chart__title\">\r\n        ${this.label}\r\n        ${this.linkTemplate}\r\n      </div>\r\n      <div class=\"column-chart__container\">\r\n        <div data-element=\"header\" class=\"column-chart__header\">${this.formatHeading}</div>\r\n        <div data-element=\"body\" class=\"column-chart__chart\">`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div'); // (*)\r\n    element.innerHTML = this.getTemplate();\r\n    this.element = element.firstElementChild;\r\n    this.getSubElements(this.element);\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const arr = element.querySelectorAll('[data-element]');\r\n    for (const elem of arr) {\r\n      this.subElements[elem.dataset.element] = elem;\r\n    }\r\n  }\r\n\r\n  getColumnBody() {\r\n    const maxValue = Math.max(...Object.values(this.data));\r\n    const scale = this.chartHeight / maxValue;\r\n\r\n    return Object.entries(this.data)\r\n      .map(([item, value]) => {\r\n      const scale = this.chartHeight / maxValue;\r\n      const percent = (value / maxValue * 100).toFixed(0);\r\n\r\n      return `<div style=\"--value: ${Math.floor(value * scale)}\" \r\n              data-tooltip=\"<div><small>${new Date(item).toLocaleString(\"default\", {dateStyle: \"medium\"})}</small></div><strong>${percent}%</strong>\"></div>`;\r\n    })\r\n      .join('');\r\n  }\r\n  async loadData(from, to) {\r\n    this.url.searchParams.set('from', from.toISOString());\r\n    this.url.searchParams.set('to', to.toISOString());\r\n    return await fetchJson(this.url);\r\n  }\r\n\r\n  async update(from, to) {\r\n    const data = await this.loadData(from, to);\r\n    this.data = data;\r\n    if (!Object.values(data)) {\r\n      this.element.classList.add('column-chart_loading');\r\n      return data;\r\n    }\r\n    this.element.classList.remove('column-chart_loading');\r\n    const headerTotal = Object.values(data).reduce((a, b) => a + b, 0);\r\n    this.subElements.body.innerHTML = this.getColumnBody();\r\n    this.subElements.header.textContent = this.formatHeading(headerTotal);\r\n    return data;\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n  }\r\n}\r\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Фото',\r\n    sortable: false,\r\n    template: data => {\r\n      return `\r\n          <div class=\"sortable-table__cell\">\r\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${(data[0]) ? data[0].url : \"\"}\">\r\n          </div>\r\n        `;\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Название',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'subcategory',\r\n    title: 'Категория',\r\n    sortable: false,\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n                <span data-tooltip='<div class=\"sortable-table-tooltip\"><span class=\"sortable-table-tooltip__category\">${data.category.title + ' / '}</span><b class=\"sortable-table-tooltip__subcategory\">${data.title}</b></div>'>${data.title}</span>\r\n           </div>`;\r\n    }\r\n  },\r\n\r\n  {\r\n    id: 'quantity',\r\n    title: 'Количество',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Цена',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'status',\r\n    title: 'Статус',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n          ${data > 0 ? 'Active' : 'Inactive'}\r\n        </div>`;\r\n    }\r\n  },\r\n];\r\n\r\nexport default header;\r\n","import RangePicker from '../../components/range-picker/index.js';\r\nimport SortableTable from '../../components/sortable-table/index.js';\r\nimport ColumnChart from '../../components/column-chart/index.js';\r\nimport header from './bestsellers-header.js';\r\n\r\nimport fetchJson from '../../utils/fetch-json.js';\r\nconst BACKEND_URL = process.env.BACKEND_URL;\r\n\r\nexport default class Page {\r\n  element;\r\n  subElements = {};\r\n  components = {};\r\n  url = new URL('api/dashboard/bestsellers', BACKEND_URL);\r\n\r\n  async updateComponents(from, to) {\r\n    const data = await this.loadData(from, to);\r\n\r\n    this.components.sortableTable.update(data);\r\n    this.components.ordersChart.update(from, to);\r\n    this.components.salesChart.update(from, to);\r\n    this.components.customersChart.update(from, to);\r\n  }\r\n\r\n  loadData(from, to) {\r\n    this.url.searchParams.set('_start', '0');\r\n    this.url.searchParams.set('_end', '30');\r\n    this.url.searchParams.set('_sort', 'title');\r\n    this.url.searchParams.set('_order', 'asc');\r\n    this.url.searchParams.set('from', from.toISOString());\r\n    this.url.searchParams.set('to', to.toISOString());\r\n\r\n    return fetchJson(this.url);\r\n  }\r\n\r\n  initComponents() {\r\n    const now = new Date();\r\n    const range = {\r\n      from: new Date(now.setMonth(now.getMonth() - 1)),\r\n      to: new Date()\r\n    };\r\n    const rangePicker = new RangePicker(range);\r\n\r\n    const ordersChart = new ColumnChart({\r\n      url: 'api/dashboard/orders',\r\n      range,\r\n      label: 'Заказы',\r\n      link: '#'\r\n    });\r\n    const salesChart = new ColumnChart({\r\n        url: \"/api/dashboard/sales\",\r\n        label: 'Продажи',\r\n        range,\r\n        formatHeading: data => data.toLocaleString('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n        }).slice(0,-3)\r\n      }\r\n    );\r\n    const customersChart = new ColumnChart({\r\n      url: \"/api/dashboard/customers\",\r\n      label: 'Клиенты',\r\n      range\r\n    });\r\n    const sortableTable = new SortableTable(header,{\r\n      url: `api/dashboard/bestsellers?_start=1&_end=20&from=${range.from.toISOString()}&to=${range.to.toISOString()}`,\r\n      isSortLocally: true\r\n    });\r\n    this.components = {\r\n      rangePicker,\r\n      ordersChart,\r\n      salesChart,\r\n      customersChart,\r\n      sortableTable\r\n    };\r\n  }\r\n\r\n  get template() {\r\n    return `<div class=\"dashboard\">\r\n      <div class=\"content__top-panel\">\r\n        <h2 class=\"page-title\">Панель управления</h2>\r\n        <!-- RangePicker component -->\r\n        <div data-element=\"rangePicker\"></div>\r\n      </div>\r\n      <div data-element=\"chartsRoot\" class=\"dashboard__charts\">\r\n        <!-- column-chart components -->\r\n        <div data-element=\"ordersChart\" class=\"dashboard__chart_orders\"></div>\r\n        <div data-element=\"salesChart\" class=\"dashboard__chart_sales\"></div>\r\n        <div data-element=\"customersChart\" class=\"dashboard__chart_customers\"></div>\r\n      </div>\r\n      <h3 class=\"block-title\">Лидеры продаж</h3>\r\n      <div data-element=\"sortableTable\">\r\n        <!-- sortable-table component -->\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.getSubElements(element);\r\n\r\n    this.initComponents();\r\n    this.renderComponents();\r\n    this.initEventListeners();\r\n\r\n    return this.element;\r\n  }\r\n  renderComponents() {\r\n    for (const component of Object.keys(this.components)) {\r\n      this.subElements[component].append(this.components[component].element);\r\n    }\r\n  }\r\n  initEventListeners() {\r\n    this.components.rangePicker.element.addEventListener('date-select', event => {\r\n      const { from, to } = event.detail;\r\n\r\n      this.updateComponents(from, to);\r\n    });\r\n  }\r\n  getSubElements(element) {\r\n    const arr = element.querySelectorAll('[data-element]');\r\n    for (const elem of arr) {\r\n      this.subElements[elem.dataset.element] = elem;\r\n    }\r\n  }\r\n  remove() {\r\n    this.element.remove();\r\n  }\r\n  destroy() {\r\n    this.subElements = {};\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n    this.remove();\r\n  }\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n"],"sourceRoot":""}