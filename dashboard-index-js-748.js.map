{"version":3,"sources":["webpack://project-structure/./src/components/range-picker/index.js","webpack://project-structure/./src/components/sortable-table/index.js","webpack://project-structure/./src/components/column-chart/index.js","webpack://project-structure/./src/pages/dashboard/bestsellers-header.js","webpack://project-structure/./src/pages/dashboard/index.js","webpack://project-structure/./src/utils/fetch-json.js"],"names":["RangePicker","date","toLocaleString","dateStyle","constructor","from","Date","to","event","isOpen","this","element","classList","contains","isRangePicker","target","close","showDateFrom","selected","render","formatDate","document","createElement","innerHTML","template","firstElementChild","subElements","getSubElements","initEventListeners","Promise","resolve","subElement","querySelectorAll","dataset","elem","input","selector","addEventListener","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","remove","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","add","selectedFromElem","closest","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","removeEventListener","destroy","SortableTable","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","filtered","async","bottom","getBoundingClientRect","documentElement","clientHeight","loading","data","loadData","update","column","newOrder","asc","desc","toggleOrder","append","arrow","sortLocally","sortOnServer","URL","process","wrapper","getTable","renderRows","searchParams","set","price_gte","price_lte","title_like","status","fetchJson","addRows","body","getTableRows","length","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","header","onSortClick","onWindowScroll","sortedData","sortData","arr","sortType","customSorting","direction","sort","a","b","localeCompare","reduce","accum","ColumnChart","label","link","getColumnBody","maxValue","Math","max","scale","chartHeight","percent","toFixed","floor","getLink","headerData","bodyData","textContent","Page","ORDERS","SALES","CUSTOMERS","encodeURIComponent","ordersData","salesData","customersData","all","Object","values","updateCssClass","components","sortableTable","columnChartNames","cssClassList","getDataForColumnCharts","ordersDataTotal","salesDataTotal","customersDataTotal","ordersChart","salesChart","customersChart","componentNamesList","action","classNameList","componentName","className","getTime","rangePicker","initComponents","renderComponents","keys","forEach","component","root","$element","updateChartsComponents","updateTableComponent","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","Error","super","window","reason","alert"],"mappings":"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","file":"dashboard-index-js-748.js","sourcesContent":["export default class RangePicker {\r\n  element = null;\r\n  subElements = {};\r\n  selectingFrom = true;\r\n  selected = {\r\n    from: new Date(),\r\n    to: new Date()\r\n  };\r\n\r\n  static formatDate (date) {\r\n    return date.toLocaleString('ru', {dateStyle: 'short'})\r\n  }\r\n\r\n  onDocumentClick = event => {\r\n    const isOpen = this.element.classList.contains('rangepicker_open');\r\n    const isRangePicker = this.element.contains(event.target);\r\n\r\n    if (isOpen && !isRangePicker) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  constructor({from = new Date(), to = new Date()} = {}) {\r\n    this.showDateFrom = new Date(from);\r\n    this.selected = {from, to};\r\n\r\n    this.render();\r\n  }\r\n\r\n  get template () {\r\n    const from = RangePicker.formatDate(this.selected.from);\r\n    const to = RangePicker.formatDate(this.selected.to);\r\n\r\n    return `<div class=\"rangepicker\">\r\n      <div class=\"rangepicker__input\" data-elem=\"input\">\r\n        <span data-elem=\"from\">${from}</span> -\r\n        <span data-elem=\"to\">${to}</span>\r\n      </div>\r\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    this.initEventListeners();\r\n\r\n    return Promise.resolve(this.element);\r\n  }\r\n\r\n  getSubElements (element) {\r\n    const subElements = {};\r\n\r\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\r\n      subElements[subElement.dataset.elem] = subElement;\r\n    }\r\n\r\n    return subElements;\r\n  }\r\n\r\n  initEventListeners () {\r\n    const {input, selector} = this.subElements;\r\n\r\n    document.addEventListener('click', this.onDocumentClick, true);\r\n    input.addEventListener('click', () => this.toggle());\r\n    selector.addEventListener('click', event => this.onSelectorClick(event));\r\n  }\r\n\r\n  toggle() {\r\n    this.element.classList.toggle('rangepicker_open');\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  onSelectorClick({target}) {\r\n    if (target.classList.contains('rangepicker__cell')) {\r\n      this.onRangePickerCellClick(target);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.element.classList.remove('rangepicker_open');\r\n  }\r\n\r\n  renderDateRangePicker() {\r\n    const showDate1 = new Date(this.showDateFrom);\r\n    const showDate2 = new Date(this.showDateFrom);\r\n    const { selector } = this.subElements;\r\n\r\n    showDate2.setMonth(showDate2.getMonth() + 1);\r\n\r\n    selector.innerHTML = `\r\n      <div class=\"rangepicker__selector-arrow\"></div>\r\n      <div class=\"rangepicker__selector-control-left\"></div>\r\n      <div class=\"rangepicker__selector-control-right\"></div>\r\n      ${this.renderCalendar(showDate1)}\r\n      ${this.renderCalendar(showDate2)}\r\n    `;\r\n\r\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\r\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\r\n\r\n    controlLeft.addEventListener('click', () => this.prev());\r\n    controlRight.addEventListener('click', () => this.next());\r\n\r\n    this.renderHighlight();\r\n  }\r\n\r\n  prev () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  next () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  renderHighlight() {\r\n    const { from, to } = this.selected;\r\n\r\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\r\n      const { value } = cell.dataset;\r\n      const cellDate = new Date(value);\r\n\r\n      cell.classList.remove('rangepicker__selected-from');\r\n      cell.classList.remove('rangepicker__selected-between');\r\n      cell.classList.remove('rangepicker__selected-to');\r\n\r\n      if (from && value === from.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-from');\r\n      } else if (to && value === to.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-to');\r\n      } else if (from && to && cellDate >= from && cellDate <= to) {\r\n        cell.classList.add('rangepicker__selected-between');\r\n      }\r\n    }\r\n\r\n    if (from) {\r\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\r\n      if (selectedFromElem) {\r\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\r\n      }\r\n    }\r\n\r\n    if (to) {\r\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\r\n      if (selectedToElem) {\r\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\r\n      }\r\n    }\r\n  }\r\n\r\n  renderCalendar(showDate) {\r\n    const date = new Date(showDate);\r\n    const getGridStartIndex = dayIndex => {\r\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\r\n      return index + 1;\r\n    };\r\n\r\n    date.setDate(1);\r\n\r\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\r\n\r\n    let table = `<div class=\"rangepicker__calendar\">\r\n      <div class=\"rangepicker__month-indicator\">\r\n        <time datetime=${monthStr}>${monthStr}</time>\r\n      </div>\r\n      <div class=\"rangepicker__day-of-week\">\r\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\r\n      </div>\r\n      <div class=\"rangepicker__date-grid\">\r\n    `;\r\n\r\n    table += `\r\n      <button type=\"button\"\r\n        class=\"rangepicker__cell\"\r\n        data-value=\"${date.toISOString()}\"\r\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\r\n          ${date.getDate()}\r\n      </button>`;\r\n\r\n    date.setDate(2);\r\n\r\n    while (date.getMonth() === showDate.getMonth()) {\r\n      table += `\r\n        <button type=\"button\"\r\n          class=\"rangepicker__cell\"\r\n          data-value=\"${date.toISOString()}\">\r\n            ${date.getDate()}\r\n        </button>`;\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    table += '</div></div>';\r\n\r\n    return table;\r\n  }\r\n\r\n  onRangePickerCellClick(target) {\r\n    const { value } = target.dataset;\r\n\r\n    if (value) {\r\n      const dateValue = new Date(value);\r\n\r\n      if (this.selectingFrom) {\r\n        this.selected = {\r\n          from: dateValue,\r\n          to:   null\r\n        };\r\n        this.selectingFrom = false;\r\n        this.renderHighlight();\r\n      } else {\r\n        if (dateValue > this.selected.from) {\r\n          this.selected.to = dateValue;\r\n        } else {\r\n          this.selected.to = this.selected.from;\r\n          this.selected.from = dateValue;\r\n        }\r\n\r\n        this.selectingFrom = true;\r\n        this.renderHighlight();\r\n      }\r\n\r\n      if (this.selected.from && this.selected.to) {\r\n        this.dispatchEvent();\r\n        this.close();\r\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\r\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent () {\r\n    this.element.dispatchEvent(new CustomEvent('date-select', {\r\n      bubbles: true,\r\n      detail:  this.selected\r\n    }));\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n    document.removeEventListener('click', this.onDocumentClick, true);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.element = null;\r\n    this.subElements = {};\r\n    this.selectingFrom = true;\r\n    this.selected = {\r\n      from: new Date(),\r\n      to: new Date()\r\n    };\r\n\r\n    return this;\r\n  }\r\n}\r\n","import fetchJson from \"../../utils/fetch-json.js\";\r\n\r\nconst BACKEND_URL = process.env.BACKEND_URL;\r\n\r\nexport default class SortableTable {\r\n  element;\r\n  subElements = {};\r\n  data = [];\r\n  loading = false;\r\n  step = 20;\r\n  start = 1;\r\n  end = this.start + this.step;\r\n\r\n  onWindowScroll = async () => {\r\n    const { bottom } = this.element.getBoundingClientRect();\r\n    const { id, order } = this.sorted;\r\n\r\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\r\n      this.start = this.end;\r\n      this.end = this.start + this.step;\r\n\r\n      this.loading = true;\r\n\r\n      const data = await this.loadData(id, order, this.start, this.end);\r\n      this.update(data);\r\n\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  onSortClick = event => {\r\n    const column = event.target.closest('[data-sortable=\"true\"]');\r\n    const toggleOrder = order => {\r\n      const orders = {\r\n        asc: 'desc',\r\n        desc: 'asc'\r\n      };\r\n\r\n      return orders[order];\r\n    };\r\n\r\n    if (column) {\r\n      const { id, order } = column.dataset;\r\n      const newOrder = toggleOrder(order);\r\n\r\n      this.sorted = {\r\n        id,\r\n        order: newOrder\r\n      };\r\n\r\n      column.dataset.order = newOrder;\r\n      column.append(this.subElements.arrow);\r\n\r\n      if (this.isSortLocally) {\r\n        this.sortLocally(id, newOrder);\r\n      } else {\r\n        this.start = 1;\r\n        this.end = 1 + this.step;\r\n        this.sortOnServer(id, newOrder, this.start, this.end);\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(headersConfig = [], {\r\n    url = '',\r\n    sorted = {\r\n      id: headersConfig.find(item => item.sortable).id,\r\n      order: 'asc'\r\n    },\r\n    isSortLocally = false,\r\n    step = 20,\r\n    start = 1,\r\n    end = start + step,\r\n    from = null,\r\n    to = null,\r\n    filtered = null,\r\n  } = {}) {\r\n\r\n    this.headersConfig = headersConfig;\r\n    this.url = new URL(url, BACKEND_URL);\r\n    this.sorted = sorted;\r\n    this.isSortLocally = isSortLocally;\r\n    this.step = step;\r\n    this.start = start;\r\n    this.end = end;\r\n    //In ISO format, use Date.toISOString\r\n    this.from = from;\r\n    this.to = to;\r\n    this.filtered = filtered;\r\n\r\n    this.render();\r\n  }\r\n\r\n  async render() {\r\n    const {id, order} = this.sorted;\r\n    const wrapper = document.createElement('div');\r\n\r\n    wrapper.innerHTML = this.getTable();\r\n\r\n    const element = wrapper.firstElementChild;\r\n\r\n    this.element = element;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    const data = await this.loadData(id, order, this.start, this.end);\r\n\r\n    this.renderRows(data);\r\n    this.initEventListeners();\r\n    return this.element;\r\n  }\r\n\r\n  async loadData (id, order, start = this.start, end = this.end) {\r\n    if (this.from && this.to) {\r\n      this.url.searchParams.set('createdAt_gte', this.from);\r\n      this.url.searchParams.set('createdAt_lte', this.to);\r\n    }\r\n\r\n    if (this.filtered) {\r\n      const { price_gte, price_lte, title_like, status } = this.filtered;\r\n\r\n      this.url.searchParams.set('price_gte', price_gte);\r\n      this.url.searchParams.set('price_lte', price_lte);\r\n      \r\n      if (title_like) {\r\n        this.url.searchParams.set('title_like', title_like);\r\n      }\r\n\r\n      if (status) {\r\n        this.url.searchParams.set('status', status);\r\n      }\r\n\r\n    }\r\n\r\n    this.url.searchParams.set('_sort', id);\r\n    this.url.searchParams.set('_order', order);\r\n    this.url.searchParams.set('_start', start);\r\n    this.url.searchParams.set('_end', end);\r\n\r\n    this.element.classList.add('sortable-table_loading');\r\n    \r\n\r\n    const data = await fetchJson(this.url);\r\n\r\n    this.element.classList.remove('sortable-table_loading');\r\n\r\n    return data;\r\n  }\r\n\r\n  addRows (data) {\r\n    this.data = data;\r\n    this.subElements.body.innerHTML = this.getTableRows(data);\r\n\r\n    if (data.length) {\r\n      this.element.classList.remove('sortable-table_empty');\r\n    } else {\r\n      this.element.classList.add('sortable-table_empty');\r\n    }\r\n  }\r\n\r\n  update (data) {\r\n    const rows = document.createElement('div');\r\n\r\n    this.data = [...this.data, ...data];\r\n    rows.innerHTML = this.getTableRows(data);\r\n\r\n    this.subElements.body.append(...rows.childNodes);\r\n    return rows;\r\n  }\r\n\r\n  getTableHeader() {\r\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\r\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\r\n    </div>`;\r\n  }\r\n\r\n  getHeaderRow ({id, title, sortable}) {\r\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\r\n\r\n    return `\r\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\r\n        <span>${title}</span>\r\n        ${this.getHeaderSortingArrow(id)}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getHeaderSortingArrow (id) {\r\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\r\n\r\n    return isOrderExist\r\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\r\n          <span class=\"sort-arrow\"></span>\r\n        </span>`\r\n      : '';\r\n  }\r\n\r\n  getTableBody(data) {\r\n    return `\r\n      <div data-element=\"body\" class=\"sortable-table__body\">\r\n        ${this.getTableRows(data)}\r\n      </div>`;\r\n  }\r\n\r\n  getTableRows (data) {\r\n    return data.map(item => `\r\n      <a href=\"/products/${item.id}\" class=\"sortable-table__row\">\r\n        ${this.getTableRow(item, data)}\r\n      </a>`\r\n    ).join('');\r\n  }\r\n\r\n  getTableRow (item) {\r\n    const cells = this.headersConfig.map(({id, template}) => {\r\n      return {\r\n        id,\r\n        template\r\n      }\r\n    });\r\n\r\n    return cells.map(({id, template}) => {\r\n      return template\r\n        ? template(item[id])\r\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`\r\n    }).join('');\r\n  }\r\n\r\n  getTable() {\r\n    return `\r\n      <div class=\"sortable-table\">\r\n        ${this.getTableHeader()}\r\n        ${this.getTableBody(this.data)}\r\n\r\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\r\n\r\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\r\n          No data\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\r\n    document.addEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  sortLocally (id, order) {\r\n    const sortedData = this.sortData(id, order);\r\n\r\n    this.subElements.body.innerHTML = this.getTableBody(sortedData);\r\n  }\r\n\r\n  async sortOnServer (id, order, start, end) {\r\n    const data = await this.loadData(id, order, start, end);\r\n\r\n    this.renderRows(data);\r\n  }\r\n\r\n  renderRows (data) {\r\n    if (data.length) {\r\n      this.element.classList.remove('sortable-table_empty');\r\n      this.addRows(data);\r\n    } else {\r\n      this.element.classList.add('sortable-table_empty');\r\n    }\r\n  }\r\n\r\n  sortData (id, order) {\r\n    const arr = [...this.data];\r\n    const column = this.headersConfig.find(item => item.id === id);\r\n    const {sortType, customSorting} = column;\r\n    const direction = order === 'asc' ? 1 : -1;\r\n\r\n    return arr.sort((a, b) => {\r\n      switch (sortType) {\r\n        case 'number':\r\n          return direction * (a[id] - b[id]);\r\n        case 'string':\r\n          return direction * a[id].localeCompare(b[id], 'ru');\r\n        case 'custom':\r\n          return direction * customSorting(a, b);\r\n        default:\r\n          return direction * (a[id] - b[id]);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  remove() {\r\n    this.element.remove();\r\n    document.removeEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.subElements = {};\r\n  }\r\n}\r\n","export default class ColumnChart {\r\n  element;\r\n  subElements = {};\r\n  chartHeight = 50;\r\n\r\n  constructor({\r\n    data = [],\r\n    label = '',\r\n    link = '',\r\n    value = 0\r\n  } = {}) {\r\n    this.data = data;\r\n    this.label = label;\r\n    this.link = link;\r\n    this.value = value;\r\n\r\n    this.render();\r\n  }\r\n\r\n  getColumnBody(data) {\r\n    const maxValue = Math.max(...data);\r\n\r\n    return data\r\n    .map(item => {\r\n      const scale = this.chartHeight / maxValue;\r\n      const percent = (item / maxValue * 100).toFixed(0);\r\n\r\n      return `<div style=\"--value: ${Math.floor(item * scale)}\" data-tooltip=\"${percent}%\"></div>`;\r\n    })\r\n    .join('');\r\n  }\r\n\r\n  getLink() {\r\n    return this.link ? `<a class=\"column-chart__link\" href=\"${this.link}\">View all</a>` : '';\r\n  }\r\n\r\n  get template () {\r\n    return `\r\n      <div class=\"column-chart column-chart_loading\" style=\"--chart-height: ${this.chartHeight}\">\r\n        <div class=\"column-chart__title\">\r\n          Total ${this.label}\r\n          ${this.getLink()}\r\n        </div>\r\n        <div class=\"column-chart__container\">\r\n          <div data-element=\"header\" class=\"column-chart__header\">\r\n            ${this.value}\r\n          </div>\r\n          <div data-element=\"body\" class=\"column-chart__chart\">\r\n            ${this.getColumnBody(this.data)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n\r\n    this.element.classList.remove(`column-chart_loading`);\r\n\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    return this.element;\r\n  }\r\n\r\n  getSubElements (element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  update ({headerData, bodyData}) {\r\n    this.subElements.header.textContent = headerData;\r\n    this.subElements.body.innerHTML = this.getColumnBody(bodyData);\r\n  }\r\n\r\n  destroy() {\r\n    this.element.remove();\r\n  }\r\n}\r\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Image',\r\n    sortable: false,\r\n    template: data => {\r\n      return `\r\n          <div class=\"sortable-table__cell\">\r\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${(data[0]) ? data[0].url : \"\"}\">\r\n          </div>\r\n        `;\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Name',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    title: 'Quantity',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Price',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'status',\r\n    title: 'Status',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n          ${data > 0 ? 'Active' : 'Inactive'}\r\n        </div>`;\r\n    }\r\n  },\r\n];\r\n\r\nexport default header;\r\n","import RangePicker from '../../components/range-picker/index.js';\r\nimport SortableTable from '../../components/sortable-table/index.js';\r\nimport ColumnChart from '../../components/column-chart/index.js';\r\nimport header from './bestsellers-header.js';\r\n\r\nimport fetchJson from '../../utils/fetch-json.js';\r\n\r\nexport default class Page {\r\n  element;\r\n  subElements = {};\r\n  components = {};\r\n\r\n  async getDataForColumnCharts (from, to) {\r\n    const ORDERS = `${process.env.BACKEND_URL}api/dashboard/orders?from=${from.toISOString()}&to=${to.toISOString()}`;\r\n    const SALES = `${process.env.BACKEND_URL}api/dashboard/sales?from=${from.toISOString()}&to=${to.toISOString()}`;\r\n    const CUSTOMERS = `${process.env.BACKEND_URL}api/dashboard/customers?from=${encodeURIComponent(from.toISOString())}&to=${encodeURIComponent(to.toISOString())}`;\r\n\r\n    const ordersData = fetchJson(ORDERS);\r\n    const salesData = fetchJson(SALES);\r\n    const customersData = fetchJson(CUSTOMERS);\r\n\r\n    const data = await Promise.all([ordersData, salesData, customersData]);\r\n    return data.map(item => Object.values(item));\r\n  }\r\n\r\n  async updateTableComponent (from, to) {\r\n\r\n    this.updateCssClass([\"sortableTable\"], \"add\", [\"sortable-table_loading\"]);\r\n\r\n    const data = await fetchJson(`${process.env.BACKEND_URL}api/dashboard/bestsellers?_start=1&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`);\r\n    this.components.sortableTable.addRows(data);\r\n\r\n    this.updateCssClass([\"sortableTable\"], \"remove\", [\"sortable-table_loading\"]); \r\n  }\r\n\r\n  async updateChartsComponents (from, to) {\r\n    const columnChartNames = [\"ordersChart\", \"salesChart\", \"customersChart\"];\r\n    const cssClassList = [\"column-chart_loading\"];\r\n    this.updateCssClass(columnChartNames, \"add\", cssClassList);\r\n\r\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\r\n    const ordersDataTotal = ordersData.reduce((accum, item) => accum + item, 0);\r\n    const salesDataTotal = salesData.reduce((accum, item) => accum + item, 0);\r\n    const customersDataTotal = customersData.reduce((accum, item) => accum + item, 0);\r\n\r\n    this.components.ordersChart.update({headerData: ordersDataTotal, bodyData: ordersData});\r\n    this.components.salesChart.update({headerData: '$' + salesDataTotal, bodyData: salesData});\r\n    this.components.customersChart.update({headerData: customersDataTotal, bodyData: customersData});\r\n\r\n    this.updateCssClass(columnChartNames, \"remove\", cssClassList);\r\n  }\r\n\r\n  /**\r\n   * Adds or removes css class(es) from component(s)\r\n   * \r\n   * @param {array} componentNamesList \r\n   * @param {string} action ['add' | 'remove']\r\n   * @param {array} classNameList \r\n   */\r\n  updateCssClass(componentNamesList, action, classNameList) {\r\n    for (const componentName of componentNamesList) {\r\n      const {element} = this.components[componentName];\r\n\r\n      for (const className of classNameList) {\r\n        switch (action) {\r\n          case \"add\":\r\n            element.classList.add(className);\r\n            break;\r\n          case \"remove\":\r\n            element.classList.remove(className);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async initComponents () {\r\n    const to = new Date();\r\n    const from = new Date(to.getTime() - (30 * 24 * 60 * 60 * 1000));\r\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\r\n\r\n    const rangePicker = new RangePicker({\r\n      from,\r\n      to\r\n    });\r\n\r\n    const sortableTable = new SortableTable(header, {\r\n      url: `api/dashboard/bestsellers?_start=1&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`,\r\n      isSortLocally: true\r\n    });\r\n\r\n    const ordersChart = new ColumnChart({\r\n      data: ordersData,\r\n      label: 'orders',\r\n      value: ordersData.reduce((accum, item) => accum + item, 0),\r\n      link: '#'\r\n    });\r\n\r\n    const salesChart = new ColumnChart({\r\n      data: salesData,\r\n      label: 'sales',\r\n      value: '$' + salesData.reduce((accum, item) => accum + item, 0),\r\n    });\r\n\r\n    const customersChart = new ColumnChart({\r\n      data: customersData,\r\n      label: 'customers',\r\n      value: customersData.reduce((accum, item) => accum + item, 0),\r\n    });\r\n\r\n    this.components.sortableTable = sortableTable;\r\n    this.components.ordersChart = ordersChart;\r\n    this.components.salesChart = salesChart;\r\n    this.components.customersChart = customersChart;\r\n    this.components.rangePicker = rangePicker;\r\n  }\r\n\r\n  get template () {\r\n    return `<div class=\"dashboard\">\r\n      <div class=\"content__top-panel\">\r\n        <h2 class=\"page-title\">Dashboard</h2>\r\n        <!-- RangePicker component -->\r\n        <div data-element=\"rangePicker\"></div>\r\n      </div>\r\n      <div data-element=\"chartsRoot\" class=\"dashboard__charts\">\r\n        <!-- column-chart components -->\r\n        <div data-element=\"ordersChart\" class=\"dashboard__chart_orders\"></div>\r\n        <div data-element=\"salesChart\" class=\"dashboard__chart_sales\"></div>\r\n        <div data-element=\"customersChart\" class=\"dashboard__chart_customers\"></div>\r\n      </div>\r\n\r\n      <h3 class=\"block-title\">Best sellers</h3>\r\n\r\n      <div data-element=\"sortableTable\">\r\n        <!-- sortable-table component -->\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  async render () {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    await this.initComponents();\r\n\r\n    this.renderComponents();\r\n    this.initEventListeners();\r\n\r\n    return this.element;\r\n  }\r\n\r\n  renderComponents () {\r\n    Object.keys(this.components).forEach(component => {\r\n      const root = this.subElements[component];\r\n      const { element } = this.components[component];\r\n\r\n      root.append(element);\r\n    });\r\n  }\r\n\r\n  getSubElements ($element) {\r\n    const elements = $element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.components.rangePicker.element.addEventListener('date-select', event => {\r\n      const { from, to } = event.detail;\r\n      this.updateChartsComponents(from, to);\r\n      this.updateTableComponent(from, to);\r\n    });\r\n  }\r\n\r\n  destroy () {\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n  }\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n"],"sourceRoot":""}