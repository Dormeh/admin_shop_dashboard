{"version":3,"sources":["webpack://project-structure/./src/components/notification/index.js","webpack://project-structure/./src/components/sortable-table/index.js","webpack://project-structure/./src/components/double-slider/index.js","webpack://project-structure/./src/pages/products/list/products-header.js","webpack://project-structure/./src/pages/products/list/index.js","webpack://project-structure/./src/utils/fetch-json.js"],"names":["NotificationMessage","constructor","message","duration","type","this","render","isAlreadyShow","remove","getTemplate","element","document","createElement","innerHTML","firstElementChild","classList","add","show","body","append","setTimeout","destroy","SortableTable","headerConfig","data","sorted","id","find","item","sortable","order","isSortLocally","url","clickableString","contains","endOfData","getBoundingClientRect","bottom","documentElement","clientHeight","loadData","then","update","catch","error","event","target","closest","dataset","sort","r","URL","process","initEventListeners","renderHeaders","sortColumn","headerArr","obj","arrowTemplate","orderType","push","title","join","renderBody","bodyArr","filter","map","el","template","getSubElements","arr","querySelectorAll","elem","subElements","getTable","searchParams","set","length","pageSize","fetchJson","replace","rows","childNodes","header","addEventListener","handleClick","onWindowScroll","sortOnClient","direction","asc","desc","sortType","a","b","localeCompare","sortOnServer","removeEventListener","DoubleSlider","min","max","formatValue","value","selected","from","to","preventDefault","left","innerLeft","right","innerRight","width","inner","dragging","thumbLeft","newLeft","clientX","shiftX","parseFloat","thumbRight","style","progress","getValue","newRight","onThumbPointerMove","onThumbPointerUp","dispatchEvent","CustomEvent","detail","bubbles","ondragstart","onThumbPointerDown","result","elements","subElement","rangeTotal","Math","floor","thumbElem","round","category","Page","components","sortableTable","start","end","initComponents","sliderContainer","renderComponents","component","Object","keys","updateComponents","filterName","filterStatus","status","options","delete","values","async","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","Error","super","window","reason","alert"],"mappings":"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","file":"products-list-index-js-197.js","sourcesContent":["export default class NotificationMessage {\r\n  element;\r\n  constructor(message = '', {\r\n    duration = 1000,\r\n    type = 'success',\r\n  } = {}) {\r\n    this.duration = duration;\r\n    this.message = message;\r\n    this.type = type;\r\n    this.render();\r\n    if (NotificationMessage.isAlreadyShow) {\r\n      NotificationMessage.isAlreadyShow.remove(NotificationMessage.isAlreadyShow);\r\n    } else {\r\n      NotificationMessage.isAlreadyShow = false;\r\n    }\r\n  }\r\n  getTemplate () {\r\n    return `<div class=\"notification\" style=\"--value:2s\">\r\n    <div class=\"timer\"></div>\r\n    <div class=\"inner-wrapper\">\r\n      <div class=\"notification-header\">${this.type}</div>\r\n      <div class=\"notification-body\">${this.message}</div>\r\n    </div>\r\n  </div>`;\r\n  }\r\n  render() {\r\n    const element = document.createElement('div'); // (*)\r\n    element.innerHTML = this.getTemplate();\r\n    this.element = element.firstElementChild;\r\n    this.element.classList.add(this.type);\r\n  }\r\n  show(element = document.body) {\r\n    element.append(this.element);\r\n    NotificationMessage.isAlreadyShow = this.element;\r\n    const timer = setTimeout(() => this.remove(), this.duration);\r\n    return this.element;\r\n  }\r\n  remove() {\r\n    this.element.remove();\r\n  }\r\n  destroy() {\r\n    this.remove();\r\n  }\r\n}\r\n","import fetchJson from \"../../utils/fetch-json.js\";\r\nimport NotificationMessage from '../notification';\r\n\r\nconst BACKEND_URL = process.env.BACKEND_URL;\r\n\r\nexport default class SortableTable {\r\n  subElements = {};\r\n  pageSize = 30;\r\n  onWindowScroll = () => {\r\n    if (this.element.classList.contains(\"sortable-table_loading\") || this.endOfData || this.isSortLocally)\r\n      return;\r\n    if (this.element.getBoundingClientRect().bottom < document.documentElement.clientHeight) {\r\n\r\n      this.loadData(this.sorted.id, this.sorted.order)\r\n        .then((data) => {\r\n          const replace = false;\r\n          this.update(data, replace);\r\n          this.element.classList.remove(\"sortable-table_loading\");\r\n        })\r\n        .catch(error => {\r\n          const notification = new NotificationMessage('Ошибка получения данных', {\r\n            duration: 2000,\r\n            type: 'error'\r\n          });\r\n        });\r\n\r\n    }\r\n  };\r\n  handleClick = (event) => {\r\n    const element = event.target.closest('[data-sortable=\"true\"]');\r\n    if (!element) return;\r\n    let order ;\r\n    switch (element.dataset.order) {\r\n    case 'asc':\r\n      order = 'desc';\r\n      break;\r\n    case 'desc':\r\n      order = 'asc';\r\n      break;\r\n    default:\r\n      order = 'asc';\r\n    }\r\n    this.sort(element.dataset.id, order).then(r => r);\r\n  };\r\n  constructor(headerConfig = [], {\r\n    data = [],\r\n    sorted = {\r\n      id: headerConfig.find(item => item.sortable).id,\r\n      order: 'asc'\r\n    },\r\n    isSortLocally = false,\r\n    url = '',\r\n    clickableString = true\r\n  } = {}) {\r\n    this.headerConfig = headerConfig;\r\n    this.url = typeof url === 'string'? new URL(url, BACKEND_URL): url;\r\n    this.data = data;\r\n    this.sorted = sorted;\r\n    this.isSortLocally = isSortLocally;\r\n    this.clickableString = clickableString;\r\n    this.render().then(() => this.initEventListeners());\r\n  }\r\n  getTemplate () {\r\n    return `<div data-element=\"productsContainer\" class=\"products-list__container\">\r\n  <div class=\"sortable-table\">\r\n  <div data-element=\"header\" class=\"sortable-table__header sortable-table__row\"></div>\r\n  <div data-element=\"body\" class=\"sortable-table__body\"></div>\r\n  <\\div><\\div>`;\r\n  }\r\n  renderHeaders (sortColumn, order) {\r\n    const headerArr = [];\r\n    for (const obj of this.headerConfig) {\r\n      let arrowTemplate = '';\r\n      let orderType = '';\r\n      if (obj.id === sortColumn) {\r\n        arrowTemplate = `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\r\n        <span class=\"sort-arrow\"></span>\r\n        </span>`;\r\n        orderType = order;\r\n      }\r\n      headerArr.push(`<div class=\"sortable-table__cell\" data-id=\"${obj.id}\" data-sortable=\"${obj.sortable}\" data-order=\"${orderType}\">\r\n      <span>${obj.title}</span>${arrowTemplate}\r\n      </div>`);\r\n    }\r\n    return headerArr.join('');\r\n  }\r\n\r\n  renderBody (data) {\r\n    const bodyArr = [];\r\n    for (const obj of data) {\r\n      bodyArr.push(`${this.clickableString ? `<a href=\"/products/${obj.id}\" `:'<div '} class=\"sortable-table__row\">\r\n        ${this.headerConfig\r\n        .filter(item => obj[item.id])\r\n        .map(el => el.template ? el.template(obj[el.id]) : `<div class=\"sortable-table__cell\">${obj[el.id]}</div>`)\r\n        .join('')}\r\n        ${this.clickableString ? '</a>':'</div>'}`);\r\n    }\r\n    return bodyArr.join('');\r\n  }\r\n  getSubElements(element) {\r\n    const arr = element.querySelectorAll('[data-element]');\r\n    for (const elem of arr) {\r\n      this.subElements[elem.dataset.element] = elem;\r\n    }\r\n  }\r\n  async render() {\r\n    const {id, order} = this.sorted;\r\n    const element = document.createElement('div'); // (*)\r\n    element.innerHTML = this.getTemplate();\r\n    this.element = element.firstElementChild;\r\n    this.getSubElements(this.element);\r\n    this.data = await this.loadData(id, order);\r\n    this.getTable(id, order);\r\n  }\r\n\r\n  async loadData(id, order) {\r\n    this.url.searchParams.set('_sort', id);\r\n    this.url.searchParams.set('_order', order);\r\n    this.url.searchParams.set(\"_start\", this.data.length);\r\n    this.url.searchParams.set(\"_end\", this.data.length + this.pageSize);\r\n    this.element.classList.add(\"sortable-table_loading\");\r\n    const data = await fetchJson(this.url);\r\n    this.endOfData = !data.length;\r\n    this.element.classList.remove(\"sortable-table_loading\");\r\n    return data;\r\n  }\r\n  update(data, replace = true) {\r\n    const rows = document.createElement('div');\r\n\r\n    this.data = [...this.data, ...data];\r\n    rows.innerHTML = this.renderBody(data);\r\n\r\n    if (replace) this.subElements.body.innerHTML = '';\r\n    this.subElements.body.append(...rows.childNodes);\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.subElements.header.addEventListener('pointerdown', this.handleClick);\r\n    document.addEventListener(\"scroll\", this.onWindowScroll);\r\n  }\r\n  sortOnClient(id, order) {\r\n    const directions = {\r\n      asc: -1,\r\n      desc: 1\r\n    };\r\n    const direction = directions[order];\r\n    const sortType = this.headerConfig.find(item => item.id === id).sortType;\r\n    this.data.sort((a, b) => {\r\n      switch (sortType) {\r\n      case 'number':\r\n        return direction * (a[id] - b[id]);\r\n      case 'string':\r\n        return direction * a[id].localeCompare(b[id], ['ru', 'en']);\r\n      default:\r\n        return direction * (a[id] - b[id]);\r\n      }\r\n\r\n    });\r\n    this.getTable(id, order);\r\n  }\r\n\r\n  async sortOnServer(id, order) {\r\n    this.data = await this.loadData(id, order);\r\n    this.getTable(id, order);\r\n  }\r\n\r\n  async sort(id, order) {\r\n    !this.isSortLocally ? await this.sortOnServer(id, order) : this.sortOnClient(id, order);\r\n  }\r\n  getTable (id, order) {\r\n    this.subElements.header.innerHTML = this.renderHeaders(id, order);\r\n    this.subElements.body.innerHTML = this.renderBody(this.data);\r\n    this.element.classList.remove(\"sortable-table_loading\");\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    document.removeEventListener(\"scroll\", this.onWindowScroll);\r\n    this.subElements.header.removeEventListener('pointerdown', this.handleClick);\r\n  }\r\n\r\n}\r\n","export default class DoubleSlider {\r\n  element;\r\n  subElements = {};\r\n\r\n  onThumbPointerMove = event => {\r\n    event.preventDefault();\r\n\r\n    const { left: innerLeft, right: innerRight, width } = this.subElements.inner.getBoundingClientRect();\r\n\r\n    if (this.dragging === this.subElements.thumbLeft) {\r\n      let newLeft = (event.clientX - innerLeft + this.shiftX) / width;\r\n\r\n      if (newLeft < 0) {\r\n        newLeft = 0;\r\n      }\r\n      newLeft *= 100;\r\n      const right = parseFloat(this.subElements.thumbRight.style.right);\r\n\r\n      if (newLeft + right > 100) {\r\n        newLeft = 100 - right;\r\n      }\r\n\r\n      this.dragging.style.left = this.subElements.progress.style.left = newLeft + '%';\r\n      this.subElements.from.innerHTML = this.formatValue(this.getValue().from);\r\n    }\r\n\r\n    if (this.dragging === this.subElements.thumbRight) {\r\n      let newRight = (innerRight - event.clientX - this.shiftX) / width;\r\n\r\n      if (newRight < 0) {\r\n        newRight = 0;\r\n      }\r\n      newRight *= 100;\r\n\r\n      const left = parseFloat(this.subElements.thumbLeft.style.left);\r\n\r\n      if (left + newRight > 100) {\r\n        newRight = 100 - left;\r\n      }\r\n      this.dragging.style.right = this.subElements.progress.style.right = newRight + '%';\r\n      this.subElements.to.innerHTML = this.formatValue(this.getValue().to);\r\n    }\r\n  };\r\n\r\n  onThumbPointerUp = () => {\r\n    this.element.classList.remove('range-slider_dragging');\r\n\r\n    document.removeEventListener('pointermove', this.onThumbPointerMove);\r\n    document.removeEventListener('pointerup', this.onThumbPointerUp);\r\n\r\n    this.element.dispatchEvent(new CustomEvent('range-select', {\r\n      detail: this.getValue(),\r\n      bubbles: true\r\n    }));\r\n  };\r\n\r\n  constructor({\r\n    min = 100,\r\n    max = 200,\r\n    formatValue = value => '$' + value,\r\n    selected = {\r\n      from: min,\r\n      to: max\r\n    }\r\n  } = {}) {\r\n    this.min = min;\r\n    this.max = max;\r\n    this.formatValue = formatValue;\r\n    this.selected = selected;\r\n\r\n    this.render();\r\n  }\r\n\r\n  get template() {\r\n    const { from, to } = this.selected;\r\n\r\n    return `<div class=\"range-slider\">\r\n      <span data-element=\"from\">${this.formatValue(from)}</span>\r\n      <div data-element=\"inner\" class=\"range-slider__inner\">\r\n        <span data-element=\"progress\" class=\"range-slider__progress\"></span>\r\n        <span data-element=\"thumbLeft\" class=\"range-slider__thumb-left\"></span>\r\n        <span data-element=\"thumbRight\" class=\"range-slider__thumb-right\"></span>\r\n      </div>\r\n      <span data-element=\"to\">${this.formatValue(to)}</span>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.element.ondragstart = () => false;\r\n\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    this.initEventListeners();\r\n\r\n    this.update();\r\n  }\r\n\r\n  initEventListeners() {\r\n    const { thumbLeft, thumbRight } = this.subElements;\r\n\r\n    thumbLeft.addEventListener('pointerdown', event => this.onThumbPointerDown(event));\r\n    thumbRight.addEventListener('pointerdown', event => this.onThumbPointerDown(event));\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const result = {};\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    for (const subElement of elements) {\r\n      const name = subElement.dataset.element;\r\n\r\n      result[name] = subElement;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  remove() {\r\n    this.element.remove();\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    document.removeEventListener('pointermove', this.onThumbPointerMove);\r\n    document.removeEventListener('pointerup', this.onThumbPointerUp);\r\n  }\r\n\r\n  update() {\r\n    const rangeTotal = this.max - this.min;\r\n    const left = Math.floor((this.selected.from - this.min) / rangeTotal * 100) + '%';\r\n    const right = Math.floor((this.max - this.selected.to) / rangeTotal * 100) + '%';\r\n\r\n    this.subElements.progress.style.left = left;\r\n    this.subElements.progress.style.right = right;\r\n\r\n    this.subElements.thumbLeft.style.left = left;\r\n    this.subElements.thumbRight.style.right = right;\r\n  }\r\n\r\n  onThumbPointerDown(event) {\r\n    const thumbElem = event.target;\r\n\r\n    event.preventDefault();\r\n\r\n    const { left, right } = thumbElem.getBoundingClientRect();\r\n\r\n    if (thumbElem === this.subElements.thumbLeft) {\r\n      this.shiftX = right - event.clientX;\r\n    } else {\r\n      this.shiftX = left - event.clientX;\r\n    }\r\n\r\n    this.dragging = thumbElem;\r\n\r\n    this.element.classList.add('range-slider_dragging');\r\n\r\n    document.addEventListener('pointermove', this.onThumbPointerMove);\r\n    document.addEventListener('pointerup', this.onThumbPointerUp);\r\n  }\r\n\r\n  getValue() {\r\n    const rangeTotal = this.max - this.min;\r\n    const { left } = this.subElements.thumbLeft.style;\r\n    const { right } = this.subElements.thumbRight.style;\r\n\r\n    const from = Math.round(this.min + parseFloat(left) * 0.01 * rangeTotal);\r\n    const to = Math.round(this.max - parseFloat(right) * 0.01 * rangeTotal);\r\n\r\n    return { from, to };\r\n  }\r\n}\r\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Фото',\r\n    sortable: false,\r\n    template: (data = []) => {\r\n      return `\r\n          <div class=\"sortable-table__cell\">\r\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${(data[0]) ? data[0].url : \"\"}\">\r\n          </div>\r\n        `;\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Название',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'subcategory',\r\n    title: 'Категория',\r\n    sortable: false,\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n                <span data-tooltip='<div class=\"sortable-table-tooltip\"><span class=\"sortable-table-tooltip__category\">${(data.category) ? data.category.title : ''}</span> / \r\n                <b class=\"sortable-table-tooltip__subcategory\">${data.title}</b></div>'>${data.title}</span>\r\n           </div>`;\r\n    }\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    title: 'Количество',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Цена',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'status',\r\n    title: 'Статус',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n          ${data > 0 ? 'Active' : 'Inactive'}\r\n        </div>`;\r\n    }\r\n  },\r\n];\r\n\r\nexport default header;\r\n","import fetchJson from '../../../utils/fetch-json';\r\nimport SortableTable from '../../../components/sortable-table';\r\nimport DoubleSlider from '../../../components/double-slider';\r\nimport header from '../../products/list/products-header';\r\nconst BACKEND_URL = process.env.BACKEND_URL;\r\n\r\nexport default class Page {\r\n  element;\r\n  subElements = {};\r\n  components = {};\r\n  start = 0;\r\n  end = 30;\r\n  url = new URL('api/rest/products?_embed=subcategory.category', BACKEND_URL);\r\n\r\n  async updateComponents(from, to) {\r\n    const data = await this.loadData(from, to);\r\n\r\n    this.components.sortableTable.update(data);\r\n\r\n  }\r\n\r\n  loadData(from = this.start, to = this.end) {\r\n    this.url.searchParams.set('_start', '0');\r\n    this.url.searchParams.set('_end', '30');\r\n    this.url.searchParams.set('_sort', 'title');\r\n    this.url.searchParams.set('_order', 'asc');\r\n    this.url.searchParams.set('price_gte', from);\r\n    this.url.searchParams.set('price_lte', to);\r\n    this.components.sortableTable.endOfData = false;\r\n    this.components.sortableTable.url = this.url;\r\n    this.components.sortableTable.data = [];\r\n    return fetchJson(this.url);\r\n  }\r\n\r\n  initComponents() {\r\n    const sliderContainer = new DoubleSlider({min:1, max: 4000});\r\n    this.url.searchParams.set('_start', this.start);\r\n    this.url.searchParams.set('_end', this.end);\r\n    const sortableTable = new SortableTable(header,{\r\n      url: this.url,\r\n    });\r\n    this.components = {\r\n      sliderContainer,\r\n      sortableTable\r\n    };\r\n  }\r\n\r\n  get template() {\r\n    return `<div class=\"products-list\">\r\n              <div class=\"content__top-panel\">\r\n                <h1 class=\"page-title\">Товары</h1>\r\n                <a href=\"/products/add\" class=\"button-primary\">Добавить товар</a>\r\n              </div>\r\n              \r\n              <div class=\"content-box content-box_small\">\r\n                <form class=\"form-inline\">\r\n                  <div class=\"form-group\">\r\n                    <label class=\"form-label\">Сортировать по:</label>\r\n                    <input type=\"text\" data-element=\"filterName\" class=\"form-control\" placeholder=\"Название товара\">\r\n                  </div>\r\n                  \r\n                  <div class=\"form-group\" data-element=\"sliderContainer\">\r\n                    <label class=\"form-label\">Цена:</label>\r\n                  </div>\r\n                  \r\n                  <div class=\"form-group\">\r\n                      <label class=\"form-label\">Статус:</label>\r\n                      <select class=\"form-control\" data-element=\"filterStatus\">\r\n                          <option value=\"\" selected=\"\">Любой</option>\r\n                          <option value=\"1\">Активный</option>\r\n                          <option value=\"0\">Неактивный</option>\r\n                      </select>\r\n                  </div>\r\n                </form>\r\n              </div>    \r\n                            \r\n              <div data-element=\"sortableTable\">\r\n                  <!-- sortable-table component -->\r\n              </div>\r\n            </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.getSubElements(element);\r\n    this.initComponents();\r\n    this.renderComponents();\r\n    this.initEventListeners();\r\n\r\n    return this.element;\r\n  }\r\n  renderComponents() {\r\n    for (const component of Object.keys(this.components)) {\r\n      this.subElements[component].append(this.components[component].element);\r\n    }\r\n  }\r\n  initEventListeners() {\r\n    this.subElements.sliderContainer.addEventListener('range-select', event => {\r\n      const { from, to } = event.detail;\r\n\r\n      this.updateComponents(from, to);\r\n    });\r\n    this.subElements.filterName.addEventListener('input', event => {\r\n      this.url.searchParams.set('title_like', event.target.value);\r\n\r\n      this.updateComponents();\r\n    });\r\n    this.subElements.filterStatus.addEventListener('change', event => {\r\n      const status = [...event.target.options].find(item => item.selected).value;\r\n      if (!status)  {\r\n        this.url.searchParams.delete('status');\r\n      } else {\r\n\r\n        this.url.searchParams.set('status', status);\r\n      }\r\n\r\n      this.updateComponents();\r\n    })\r\n  }\r\n  getSubElements(element) {\r\n    const arr = element.querySelectorAll('[data-element]');\r\n    for (const elem of arr) {\r\n      this.subElements[elem.dataset.element] = elem;\r\n    }\r\n  }\r\n  remove() {\r\n    this.element.remove();\r\n  }\r\n  destroy() {\r\n    this.subElements = {};\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n    this.remove();\r\n  }\r\n\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n"],"sourceRoot":""}